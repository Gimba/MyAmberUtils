#! /usr/bin/env python

# Copyright (c) 2017 Martin Rosellen

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import sys
import argparse
import operator

def main(argv):
    parser = argparse.ArgumentParser(description='Creates a cpptraj files to extract high and low energy frames.')
    parser.add_argument('energies', help='file with energy values generated by ExtractMMPBSATotals.py')
    parser.add_argument('number', help='number of frames that should be extracted (e.g. \'3\' creatas a 3'
                                       ' frame lowest energy w and a 3 frames high energy trajectory)')
    parser.add_argument('-w', '--low', help='low energy cpptraj file (default: low_energy_frames.cpptraj)')
    parser.add_argument('-i', '--high', help='high energy cpptraj (default: high_energy_frames.cpptraj)')
    parser.add_argument('-l', '--low_traj', help='file name of trajectory for low energy frames(default: '
                                                 'low_energy_frames.nc')
    parser.add_argument('-t', '--high_traj', help='file name of trajectory for high energy frames(default: '
                                                  'high_energy_frames.nc')
    parser.add_argument('-s', '--summary', help='frame numbers with according energy values (default: high_low.txt)')
    args = parser.parse_args()

if __name__ == "__main__":
    main(sys.argv)